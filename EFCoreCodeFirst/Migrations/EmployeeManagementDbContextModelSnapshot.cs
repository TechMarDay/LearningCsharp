// <auto-generated />
using System;
using EFCoreCodeFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreCodeFirst.Migrations
{
    [DbContext(typeof(EmployeeManagementDbContext))]
    partial class EmployeeManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EFCoreCodeFirst.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 2,
                            Name = "IT"
                        });
                });

            modelBuilder.Entity("EFCoreCodeFirst.Models.Employee", b =>
                {
                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmpCode");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmpCode = "Long.Nguyen",
                            Age = 18,
                            CreatedDate = new DateTime(2022, 9, 2, 7, 26, 33, 554, DateTimeKind.Utc).AddTicks(8819),
                            IsDelete = false,
                            Name = "Long Nguyen"
                        },
                        new
                        {
                            EmpCode = "Long.Hoang",
                            Age = 19,
                            CreatedDate = new DateTime(2022, 9, 2, 7, 26, 33, 554, DateTimeKind.Utc).AddTicks(8821),
                            IsDelete = false,
                            Name = "Long Hoang"
                        },
                        new
                        {
                            EmpCode = "Long.Manh",
                            Age = 18,
                            CreatedDate = new DateTime(2022, 9, 2, 7, 26, 33, 554, DateTimeKind.Utc).AddTicks(8822),
                            IsDelete = false,
                            Name = "Long Manh"
                        });
                });

            modelBuilder.Entity("EFCoreCodeFirst.Models.Employee", b =>
                {
                    b.HasOne("EFCoreCodeFirst.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EFCoreCodeFirst.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
